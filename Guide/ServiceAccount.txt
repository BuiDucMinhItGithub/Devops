Tạo namespace và serviceaccount bằng  file nano ns_pyapp.yaml

apiVersion: v1

kind: Namespace

metadata:

  name: pyapp-ns-pnh

---

apiVersion: v1

kind: ServiceAccount

metadata:

  name: pyapp-sa

  namespace: pyapp-ns-pnh


Chạy lệnh: kubectl apply –f ns_pyapp.yaml

Và kiểm tra lại: kubectl get secret -n pyapp-ns-pnh  để thấy có secret được tạo trong ns

kubectl get secret -o yaml  -n pyapp-ns-pnh registry-pnh-secret


Xem danh sách các sa trong namespace: kubectl get sa  -n pyapp-ns-pnh

Kiểm tra Service Account default có sẵn: 

kubectl get sa -o yaml default -n pyapp-ns-pnh


3	Tạo secret truy cập Registry gitlab pnh bằng lệnh:

kubectl create secret docker-registry registry-pnh-secret  --docker-server=registry.gitlab.com --docker-username=nodejspnh --docker-password=bEEJbPKZYsJ6Hxbq2YvN --docker-email=tuannh@pnh.com.vn -n pyapp-ns-pnh

Kiểm tra lại:

kubectl get secret -n pyapp-ns-pnh  thấy có thêm secret

Xem thêm mô tả secret

kubectl describe secret registry-pnh-secret -n pyapp-ns-pnh

4	Tạo deployment sử dụng secret để pull image từ private registry về:

nano deploypython.yaml

-------------------------------------

apiVersion: apps/v1

kind: Deployment

metadata:

  name: pyapp-deployment

  namespace: pyapp-ns-pnh

spec:

  selector:

    matchLabels:

      app: pyapp

  replicas: 2

  template:

    metadata:

      labels:

        app: pyapp

    spec:

 #     imagePullSecrets:

  #     - name: registry-pnh-secret

      containers:

        - name: pyapp

          image:  registry.gitlab.com/xzhoang/nodejsmysql:latest

          ports:

          - containerPort: 3000

          env:

            - name: DB_HOST

              value: 10.32.1.185

            - name: DB_USER

              value: root

            - name: DB_PASS

              value: a123456

Chạy lệnh: kubectl apply -f deploypython.yaml và sau đó kiểm tra lỗi không lấy được image:

kubectl get pod -o wide  -n pyapp-ns-pnh

Chỉnh sửa lại file deploypython.yaml bỏ hai dấu # đi và chạy lại để thấy đã sử dụng secret và chạy thành công: kubectl apply -f deploypython.yaml

5	ServiceAccount

Kiểm tra các seviceaccount (sa) có trong namespace default: kubectl get sa

Và kiểm tra trong namespace mới tạo: kubectl get sa -n pyapp-ns-pnh

Đều có seviceaccount tên là default trong cả hai namespace, được tạo ra tự động ngay khi tạo namespace đó.

Mặc định, khi tạo ra các Pod, một ServiceAccount sẽ được gán với Pod, và sẽ mount vào trong Pod một thư mục ở đường dẫn:

 /var/run/secrets/kubernetes.io/serviceaccount

trong này chứa 3 file thông tin về sa gồm: tên namespace, public key (token), certificate (ca.crt) 

-	ca.crt là certificate, chứng nhận chủ thể sở hữu public key (token)

-	Nếu không có chỉ định cụ thể, sa default của namespace  sẽ được mount vào Pod

Truy cập Pod để xe nội dung thư mục này:

kubectl exec -it pyapp-deployment-7c86b4cfff-b9n8g -n pyapp-ns-pnh /bin/sh

sau khi vào Pod: 

ls /var/run/secrets/kubernetes.io/serviceaccount

cat /var/run/secrets/kubernetes.io/serviceaccount/token

cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

exit 

Pod sử dụng Service Account khi truy cập đến Kubernetes APIserver, cho phép các Pod sau khi xác thực đọc và thao tác các đối tượng apiserver trong cluster.

Kiểm tra Pod đang dùng serviceaccount nào:

kubectl get pod  -n pyapp-ns-pnh -o yaml pyapp-deployment-7c86b4cfff-b9n8g


Nếu thêm vào Service Account thông tin đăng nhập Image Registry thì khi tạo deployment sẽ không cần chỉ định thông tin này nữa:

Thêm vào sa default của namespace pyapp-ns-pnh thông tin secret đăng nhập registry:


kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "registry-pnh-secret"}]}' -n pyapp-ns-pnh

và kiểm tra lại:

kubectl  get sa default -o yaml -n pyapp-ns-pnh

Delete deployment đang chạy:

kubectl delete -f deploypython.yaml

Chỉnh sửa nano deploypython.yaml và thêm dấu # vào 

#      imagePullSecrets:

 #       - name: registry-pnh-secret

Sau đó lưu lại và chạy: kubectl apply -f deploypython.yaml

Kiểm tra các Pod chạy thành công:

kubectl  get pod -n pyapp-ns-pnh
-----------------------------------------------------------------

k create secret docker-registry registry-pnh-secret  --docker-server=registry.gitlab.com --docker-username=qvluc --docker-password=nA4Lo1iKKp_yG4zst8yi --docker-email=hoangluc1002@gmail.com -n pyapp-ns-pnh
